
/*
 * This file was automatically generated by sdbus-c++-xml2cpp; DO NOT EDIT!
 */

#ifndef __sdbuscpp__time_server_glue_h__adaptor__H__
#define __sdbuscpp__time_server_glue_h__adaptor__H__

#include <sdbus-c++/sdbus-c++.h>
#include <string>
#include <tuple>

namespace com {
namespace system {

class time_adaptor
{
public:
    static constexpr const char* INTERFACE_NAME = "com.system.time";

protected:
    time_adaptor(sdbus::IObject& object)
        : object_(object)
    {
        object_.registerMethod("GetSystemTime").onInterface(INTERFACE_NAME).withOutputParamNames("timestamp").implementedAs([this](){ return this->GetSystemTime(); });
    }

    ~time_adaptor() = default;

private:
    virtual uint32_t GetSystemTime() = 0;

private:
    sdbus::IObject& object_;
};

}} // namespaces

#endif
